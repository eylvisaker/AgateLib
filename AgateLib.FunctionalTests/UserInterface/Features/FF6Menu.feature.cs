// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.3.2.0
//      SpecFlow Generator Version:2.3.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace AgateLib.FunctionalTests.UserInterface.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.3.2.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public partial class FF6MenuFeature : Xunit.IClassFixture<FF6MenuFeature.FixtureData>, System.IDisposable
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Xunit.Abstractions.ITestOutputHelper _testOutputHelper;
        
#line 1 "FF6Menu.feature"
#line hidden
        
        public FF6MenuFeature(FF6MenuFeature.FixtureData fixtureData, Xunit.Abstractions.ITestOutputHelper testOutputHelper)
        {
            this._testOutputHelper = testOutputHelper;
            this.TestInitialize();
        }
        
        public static void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "FF6Menu", null, ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Xunit.Abstractions.ITestOutputHelper>(_testOutputHelper);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 3
#line 4
 testRunner.Given("I have the FF6 menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "HP",
                        "MaxHP"});
            table1.AddRow(new string[] {
                        "Tora",
                        "70",
                        "100"});
            table1.AddRow(new string[] {
                        "Unlocke",
                        "100",
                        "100"});
            table1.AddRow(new string[] {
                        "Deadgar",
                        "100",
                        "100"});
            table1.AddRow(new string[] {
                        "Sabo",
                        "100",
                        "100"});
#line 5
 testRunner.And("a party of", ((string)(null)), table1, "And ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "ItemType",
                        "Effect"});
            table2.AddRow(new string[] {
                        "Short Sword",
                        "Weapon",
                        ""});
            table2.AddRow(new string[] {
                        "Long Sword",
                        "Weapon",
                        ""});
            table2.AddRow(new string[] {
                        "Leather Shield",
                        "Shield",
                        ""});
            table2.AddRow(new string[] {
                        "Leather Armor",
                        "Armor",
                        ""});
            table2.AddRow(new string[] {
                        "Leather Helm",
                        "Helm",
                        ""});
            table2.AddRow(new string[] {
                        "Sprint Shoes",
                        "Relic",
                        ""});
            table2.AddRow(new string[] {
                        "Running Shoes",
                        "Relic",
                        ""});
            table2.AddRow(new string[] {
                        "White Cape",
                        "Relic",
                        ""});
            table2.AddRow(new string[] {
                        "Dried Meat",
                        "Item",
                        "heal 999"});
#line 11
 testRunner.And("an inventory of", ((string)(null)), table2, "And ");
#line hidden
        }
        
        void System.IDisposable.Dispose()
        {
            this.ScenarioTearDown();
        }
        
        [Xunit.FactAttribute(DisplayName="FF6 - Open Items Menu")]
        [Xunit.TraitAttribute("FeatureTitle", "FF6Menu")]
        [Xunit.TraitAttribute("Description", "FF6 - Open Items Menu")]
        public virtual void FF6_OpenItemsMenu()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("FF6 - Open Items Menu", ((string[])(null)));
#line 23
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line 24
 testRunner.When("I select Items", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 25
 testRunner.Then("the active window is items/items", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute(DisplayName="FF6 - Cancel PC selection after equip")]
        [Xunit.TraitAttribute("FeatureTitle", "FF6Menu")]
        [Xunit.TraitAttribute("Description", "FF6 - Cancel PC selection after equip")]
        public virtual void FF6_CancelPCSelectionAfterEquip()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("FF6 - Cancel PC selection after equip", ((string[])(null)));
#line 27
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line 28
 testRunner.When("I select Equip", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 29
 testRunner.And("I press the cancel button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 30
 testRunner.Then("the active window is default/main", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute(DisplayName="FF6 - Use Item")]
        [Xunit.TraitAttribute("FeatureTitle", "FF6Menu")]
        [Xunit.TraitAttribute("Description", "FF6 - Use Item")]
        public virtual void FF6_UseItem()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("FF6 - Use Item", ((string[])(null)));
#line 32
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line 33
 testRunner.When("I select Items, Dried Meat, Dried Meat, Tora", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 34
 testRunner.Then("Tora is healed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute(DisplayName="FF6 - Reorder items manually")]
        [Xunit.TraitAttribute("FeatureTitle", "FF6Menu")]
        [Xunit.TraitAttribute("Description", "FF6 - Reorder items manually")]
        public virtual void FF6_ReorderItemsManually()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("FF6 - Reorder items manually", ((string[])(null)));
#line 36
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line 37
 testRunner.When("I select Items", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 38
 testRunner.And("I press the down button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 39
 testRunner.And("I press the accept button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 40
 testRunner.Then("Long Sword is the active menu item", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 41
 testRunner.When("I press the down button 2 times", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 42
 testRunner.And("I press the accept button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 43
 testRunner.Then("Leather Armor is in slot 1 in the inventory", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 44
 testRunner.And("Long Sword is in slot 3 in the inventory", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute(DisplayName="FF6 - Open Skills Menu")]
        [Xunit.TraitAttribute("FeatureTitle", "FF6Menu")]
        [Xunit.TraitAttribute("Description", "FF6 - Open Skills Menu")]
        public virtual void FF6_OpenSkillsMenu()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("FF6 - Open Skills Menu", ((string[])(null)));
#line 46
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line 47
 testRunner.When("I select Skills, Tora", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 48
 testRunner.Then("the active window is skills/skillType", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute(DisplayName="FF6 - Open Items Menu and Return to Main Menu")]
        [Xunit.TraitAttribute("FeatureTitle", "FF6Menu")]
        [Xunit.TraitAttribute("Description", "FF6 - Open Items Menu and Return to Main Menu")]
        public virtual void FF6_OpenItemsMenuAndReturnToMainMenu()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("FF6 - Open Items Menu and Return to Main Menu", ((string[])(null)));
#line 54
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line 55
 testRunner.When("I select Items", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 56
 testRunner.And("I press the cancel button 2 times", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 57
 testRunner.Then("the default workspace is active", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 58
 testRunner.And("the active window is default/main", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute(DisplayName="FF6 - Arrange items")]
        [Xunit.TraitAttribute("FeatureTitle", "FF6Menu")]
        [Xunit.TraitAttribute("Description", "FF6 - Arrange items")]
        public virtual void FF6_ArrangeItems()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("FF6 - Arrange items", ((string[])(null)));
#line 66
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line 67
 testRunner.When("I select Items", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 68
 testRunner.And("I press the cancel button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 69
 testRunner.And("I select Arrange", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 70
 testRunner.Then("the items are arranged", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute(DisplayName="FF6 - Activate magic")]
        [Xunit.TraitAttribute("FeatureTitle", "FF6Menu")]
        [Xunit.TraitAttribute("Description", "FF6 - Activate magic")]
        public virtual void FF6_ActivateMagic()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("FF6 - Activate magic", ((string[])(null)));
#line 72
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line 73
 testRunner.When("I select Skills, Tora, Magic", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 74
 testRunner.Then("the magic workspace is active", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 75
 testRunner.When("I press the cancel button 2 times", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 76
 testRunner.Then("the active window is default/main", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute(DisplayName="FF6 - Activate Espers")]
        [Xunit.TraitAttribute("FeatureTitle", "FF6Menu")]
        [Xunit.TraitAttribute("Description", "FF6 - Activate Espers")]
        public virtual void FF6_ActivateEspers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("FF6 - Activate Espers", ((string[])(null)));
#line 78
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line 79
 testRunner.When("I select Skills, Tora, Espers", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 80
 testRunner.Then("the Espers workspace is active", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.TheoryAttribute(DisplayName="FF6 - Equip Items")]
        [Xunit.TraitAttribute("FeatureTitle", "FF6Menu")]
        [Xunit.TraitAttribute("Description", "FF6 - Equip Items")]
        [Xunit.InlineDataAttribute("R-hand", "Short Sword", new string[0])]
        [Xunit.InlineDataAttribute("L-hand", "Leather Shield", new string[0])]
        [Xunit.InlineDataAttribute("Head", "Leather Helm", new string[0])]
        [Xunit.InlineDataAttribute("Body", "Leather Armor", new string[0])]
        public virtual void FF6_EquipItems(string slot, string item, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("FF6 - Equip Items", exampleTags);
#line 82
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line 83
 testRunner.When(string.Format("I select Equip, Tora, Equip, {0}, {1}", slot, item), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 84
 testRunner.Then(string.Format("{0} is equipped on Tora in the {1} slot", item, slot), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute(DisplayName="FF6 - Equip multiple items in succession")]
        [Xunit.TraitAttribute("FeatureTitle", "FF6Menu")]
        [Xunit.TraitAttribute("Description", "FF6 - Equip multiple items in succession")]
        public virtual void FF6_EquipMultipleItemsInSuccession()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("FF6 - Equip multiple items in succession", ((string[])(null)));
#line 93
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line 94
 testRunner.When("I select Equip, Tora, Equip, R-hand, Short Sword, L-hand, Leather Shield, Head, L" +
                    "eather Helm, Body, Leather Armor", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 95
 testRunner.Then("Short Sword is equipped on Tora in the R-hand slot", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 96
 testRunner.Then("Leather Shield is equipped on Tora in the L-hand slot", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 97
 testRunner.Then("Leather Helm is equipped on Tora in the Head slot", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 98
 testRunner.Then("Leather Armor is equipped on Tora in the Body slot", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.TheoryAttribute(DisplayName="FF6 - Optimum equipment for completely unequipped character.")]
        [Xunit.TraitAttribute("FeatureTitle", "FF6Menu")]
        [Xunit.TraitAttribute("Description", "FF6 - Optimum equipment for completely unequipped character.")]
        [Xunit.InlineDataAttribute("R-hand", "Short Sword", new string[0])]
        [Xunit.InlineDataAttribute("L-hand", "Leather Shield", new string[0])]
        [Xunit.InlineDataAttribute("Head", "Leather Helm", new string[0])]
        [Xunit.InlineDataAttribute("Body", "Leather Armor", new string[0])]
        public virtual void FF6_OptimumEquipmentForCompletelyUnequippedCharacter_(string slot, string item, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("FF6 - Optimum equipment for completely unequipped character.", exampleTags);
#line 100
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line 101
 testRunner.When("I select Equip, Tora, Optimum", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 102
 testRunner.Then(string.Format("{0} is equipped on Tora in the {1} slot", item, slot), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.TheoryAttribute(DisplayName="FF6 - Remove Items")]
        [Xunit.TraitAttribute("FeatureTitle", "FF6Menu")]
        [Xunit.TraitAttribute("Description", "FF6 - Remove Items")]
        [Xunit.InlineDataAttribute("R-hand", "Short Sword", new string[0])]
        [Xunit.InlineDataAttribute("L-hand", "Leather Shield", new string[0])]
        [Xunit.InlineDataAttribute("Head", "Leather Helm", new string[0])]
        [Xunit.InlineDataAttribute("Body", "Leather Armor", new string[0])]
        public virtual void FF6_RemoveItems(string slot, string item, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("FF6 - Remove Items", exampleTags);
#line 111
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line 112
 testRunner.Given("Tora is equipped with Short Sword, Leather Shield, Leather Helm, Leather Armor", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 113
 testRunner.And("the inventory is empty", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 114
 testRunner.When(string.Format("I select Equip, Tora, Remove, {0}", slot), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 115
 testRunner.Then(string.Format("nothing is equipped on Tora in the {0} slot", slot), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 116
 testRunner.And(string.Format("{0} is in the inventory", item), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.TheoryAttribute(DisplayName="FF6 - Empty Items")]
        [Xunit.TraitAttribute("FeatureTitle", "FF6Menu")]
        [Xunit.TraitAttribute("Description", "FF6 - Empty Items")]
        [Xunit.InlineDataAttribute("R-hand", "Short Sword", new string[0])]
        [Xunit.InlineDataAttribute("L-hand", "Leather Shield", new string[0])]
        [Xunit.InlineDataAttribute("Head", "Leather Helm", new string[0])]
        [Xunit.InlineDataAttribute("Body", "Leather Armor", new string[0])]
        public virtual void FF6_EmptyItems(string slot, string item, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("FF6 - Empty Items", exampleTags);
#line 125
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line 126
 testRunner.Given("Tora is equipped with Short Sword, Leather Shield, Leather Helm, Leather Armor", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 127
 testRunner.And("the inventory is empty", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 128
 testRunner.When("I select Equip, Tora, Empty", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 129
 testRunner.Then(string.Format("nothing is equipped on Tora in the {0} slot", slot), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 130
 testRunner.And(string.Format("{0} is in the inventory", item), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute(DisplayName="FF6 - Equip relic")]
        [Xunit.TraitAttribute("FeatureTitle", "FF6Menu")]
        [Xunit.TraitAttribute("Description", "FF6 - Equip relic")]
        public virtual void FF6_EquipRelic()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("FF6 - Equip relic", ((string[])(null)));
#line 139
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line 140
 testRunner.When("I select relic, Tora, Equip, Relic 1, Sprint Shoes", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 141
 testRunner.Then("Sprint Shoes is equipped on Tora in the relic 1 slot", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.TheoryAttribute(DisplayName="FF6 - Remove relic")]
        [Xunit.TraitAttribute("FeatureTitle", "FF6Menu")]
        [Xunit.TraitAttribute("Description", "FF6 - Remove relic")]
        [Xunit.InlineDataAttribute("Relic 1", "Sprint Shoes", new string[0])]
        [Xunit.InlineDataAttribute("Relic 2", "Running Shoes", new string[0])]
        public virtual void FF6_RemoveRelic(string slot, string item, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("FF6 - Remove relic", exampleTags);
#line 143
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line 144
 testRunner.Given("Tora is equipped with Sprint Shoes, Running Shoes", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 145
 testRunner.And("the inventory is empty", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 146
 testRunner.When(string.Format("I select relic, Tora, Remove, {0}", slot), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 147
 testRunner.Then(string.Format("{0} is in the inventory", item), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 148
 testRunner.And(string.Format("nothing is equipped on Tora in the {0} slot", slot), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.3.2.0")]
        [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        public class FixtureData : System.IDisposable
        {
            
            public FixtureData()
            {
                FF6MenuFeature.FeatureSetup();
            }
            
            void System.IDisposable.Dispose()
            {
                FF6MenuFeature.FeatureTearDown();
            }
        }
    }
}
#pragma warning restore
#endregion
