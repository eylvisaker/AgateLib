
Version 0.3.1
===================
All obsolete API's have been removed.

The ZipFileProvider class was added to the AgateLib.Utility namespace.  This provides support
for reading from zip files, with some restrictions.  The only compression method for files in
a zip file that is support is deflate.

Added Surface.InterpolationHint to indicate whether nearest neighbor or linear
sampling should be used when drawing scaled / rotated images.

Version 0.3.0
===================

Major namespace reorganization and class renaming.  The ERY root namespace has been removed.
 * Moved static Display class to AgateLib.DisplayLib namespace.
 * Classes directly related to display (Surface, FontSurface, etc.) moved to AgateLib.DisplayLib namespace.
 * Moved static Audio class to AgateLib.AudioLib namespace.
 * Sound/Music classes moved to AgateLib.AudioLib namespace.
 * Moved static Input class to AgateLib.InputLib.Old namespace.
 * Keyboard/mouse classes moved to AgateLib.InputLib namespace.
 * Joystick classes moved to AgateLib.InputLib.Old namespace.

A new cross platform build system has been implemented.  Now AgateLib is easy to build and edit on
Linux and MacOS with MonoDevelop.  This should help users of other operating systems use and contribute to
AgateLib.

Added AgateLib.WinForms.dll to encapsulate all references to System.Drawing and System.Windows.Forms
inside AgateLib.dll.  This is the last release of AgateLib.dll which will contain any methods which
take System.Drawing types, such as Point and Size.

AgateOTK has been updated to use a newer version of OpenTK, with Mac OS X support.  An OpenAL driver 
has been developed in AgateOTK, providing an audio driver for Linux which does not require licensing fees.

AgateSDL.dll has been added to use SDL and SDL_mixer to get joystick and audio support.

Added AgateLib.Serialization namespace with two custom serializers that produce XML output.

A new resource system has been developed to replace the old one.  Also, the AgateFileProvider 
class has been added to replace the FileManager class.  AgateFileProvider gives a better abstracted means 
of openning files, so that the the means of getting streams from files can be replaced.  This is relevant
for developers who wish to use the new resource system and store all media in archive files.  A GUI resouce 
editor is in development.

Other Breaking Changes:
* Removed Obsolete API's
* BeginFrame now throws an AgateException instead of InvalidObjectException if we are already in a BeginFrame..EndFrame block.

Version 0.2.5
===================

AgateOTK has been added for OpenGL support, and AgateFMOD has been added to use the FMOD ex library to play audio.
Both are being tested on Windows with .NET and Linux with Mono.

Important Breaking Changes:
* Moved System.Drawing replacement classes (Color, Rectangle, Point, Size and floating-point versions) to AgateLib.Geometry namespace.  
* Removed AgateLib.Geometry.Color.FromArgb(System.Drawing.Color) static method.  To convert colors from System.Drawing structures, use the ToArgb method.

Obsolete API's:
* Display.EndFrame(bool waitVSync) - Set the Display.VSync flag to indicate whether or not the vertical blank should be waited for.
* DisplayWindow.Closed - Read the DisplayWindow.IsClosed property instead.
* DisplayWindow.ToggleFullScreen - Use SetWindowed and SetFullScreen instead (old version did not allow for changing resolutions when full screen.)

Additions:
* Created OpenGL driver using the OpenTK library to add hardware accelerated support when running under Linux.
* Created FMOD driver for audio support.
* Added PixelBuffer class for direct modification of Surface data.
* Added Licensing information to some files where it was missing.
* Added code to create bitmap fonts from fonts provided by the operating system.  These are default for creating fonts in DX and OGL, because they look better than other options.
* Added the ability to introduce lighting effects.  Also Surfaces now have a TesselateFactor property which automatically divides them up into smaller rectangles for better lighting effects (per-pixel lighting not supported yet).

Fixes:
* Various minor bugs fixed.
* Various issues associated with running under Mono on Linux have been fixed.
* Reorganized source tree for AgateLib, and moved stuff which is not critical for use by external programs to namespaces under AgateLib.
* Reabsorbed the platform-specific drivers back into AgateLib.dll.  AgateWindows.dll will not be missed.
* Fixed Display.PackAllSurfaces bug.

Changes:
* Packing surfaces is now done entirely in managed memory spaces, so it should be much more robust than the render-to-texture method used previously.
* Is*Blank methods of the Surface class are obsolete now; instead use ReadPixels and then methods on the resulting PixelBuffer.

Version 0.2.1
===================
* Restructured storage for registered drivers in Registrar class to allow easier addition of new types of drivers.
* Added platform specific drivers to provide P/Invoke methods to increase speed and memory efficiency.
* Agate applications should run under Linux with a proper Mono installation now.
* Added debug messages when non-cross-platform paths are used, in particular when the backslash (\) is used as a path separator.
* Organized some of the source code in different directories.
* Registrar.Initialize is now internal instead of public.  If you are calling it, use Core.Initialize instead.
* Added a hack to make sure the Display.DeltaTime never returns zero.
* Fixed a Sprite bug where if a Clone'd sprite was Dispose'd, the shared surface data would also be disposed.  Now SpriteFrames are reference counted to resolve this.
* Fixed a bug in Sound and Music objects where they might not respond to StopAllSounds/Music.

Version 0.2.0
===================
* Added a BitmapFontImpl class, to handle bitmap fonts.
* Added FontSurface.BitmapMonospace method to create a monospace bitmap font.
* Added Surface.DrawRects, it was mistakenly missing.
* Added Keyboard.AnyKeyPressed to check to see if the user has hit a key.  
* Added StringTransformer class to allow FontSurfaces to transform strings before they are drawn.
* Added the Serializable attribute to Point, PointF, Rectangle, RectangleF, Size, SizeF structures.
* Added some code to make the Registrar a little more robust, if non .NET dll's are present.
* Added Timing.StopWatch.IsPaused as a read-only property.
* Added Object.Equals overrides in Point and Size structures.
* Added operator == and operator != in Point, Size and Rectangle structures.
* Added DisplayWindow constructor overloads that allow specification of a .ico file for the window icon.

* Renamed Keyboard.ClearAllKeys to Keyboard.ReleaseAllKeys.  Old version is there, but deprecated.
* Changed Keyboard.ReleaseAllKeys to call an internal KeyState method.
* Changed behavior of Keyboard.ReleaseAllKeys to mark keys which are already depressed so that KeyDown events are not generated for them until the are physically released.

* Fixed a bug in AgateMDX.Surface.DrawRects which was from using TriangleStrips instead of TriangleLists, and updated it to use the DrawBuffer.
* Fixed a bug where SoundBuffer and Music objects weren't using the FileManager search paths.
* Fixed a bug where Display.AutoPause would cause the program to go in an infinite loop and never exit when the window was closed.
* Fixed a bug where a NullReferenceException would occur if a new Music object was created and failed to open the media file, and then was subsequently finalized. 
* Corrected version information in AgateDrawing and AgateMDX.
* Fixed SpriteTester and SurfaceTester to work with Mono.

Version 0.1.8
===================

Initial Release
